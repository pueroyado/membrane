server {
    listen  80;
    listen  [::]:80;

    client_max_body_size 128M;
    charset utf-8;

    server_name _;

    root    /var/www;

    access_log  /var/log/nginx/docker.access.log;
    error_log   /var/log/nginx/docker.error.log;

    set $cors_credentials = '';
    if ($http_origin != "") {
        set $cors_credentials 'true';
    }

    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Credentials $cors_credentials;
            add_header Access-Control-Allow-Origin 'GET, POST, DELETE, PUT, PATCH, OPTIONS';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }

       add_header Access-Control-Allow-Origin $http_origin always;
       add_header Access-Control-Allow-Credentials $cors_credentials always;
       add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
       add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://app-go:3000/;
    }

    location ~* /\. {
        deny all;
    }
}