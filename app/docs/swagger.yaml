basePath: /
definitions:
  models.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  models.JwtPayload:
    properties:
      token:
        type: string
      tokenExp:
        type: integer
    type: object
  models.Package:
    properties:
      height:
        type: integer
      id:
        type: integer
      length:
        type: integer
      material:
        type: string
      price:
        type: integer
      type:
        type: string
      weight:
        type: integer
      width:
        type: integer
    type: object
  models.Product:
    properties:
      barcode:
        type: string
      brand:
        type: string
      category:
        $ref: '#/definitions/models.Category'
      description:
        type: string
      gallery:
        items:
          type: string
        type: array
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      package:
        $ref: '#/definitions/models.Package'
      price:
        type: integer
      property:
        items:
          additionalProperties:
            $ref: '#/definitions/models.Property'
          type: object
        type: array
      quantity:
        type: integer
      set:
        items:
          type: string
        type: array
      sku:
        type: string
    type: object
  models.Property:
    properties:
      measure:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: This is a service product
  title: Skalka API
  version: 1.2.0
paths:
  /product:
    get:
      consumes:
      - application/json
      description: Получение списка продуктов с возможным применением фильтров
      parameters:
      - description: category id
        enum:
        - 1
        - 2
        in: query
        name: category
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "404":
          description: Unexpected error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Product list
      tags:
      - Product
  /product/{id}:
    get:
      consumes:
      - application/json
      description: Получение детальной информации по товару
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: '#/definitions/models.Product'
        "404":
          description: Unexpected error
          schema:
            $ref: '#/definitions/models.Error'
      summary: Product detail
      tags:
      - Product
  /user/auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: john@mail.ru
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: secret
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/models.JwtPayload'
            type: array
      summary: User auth
      tags:
      - User
  /user/reg:
    post:
      consumes:
      - application/json
      parameters:
      - description: john@mail.ru
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: secret
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            items:
              $ref: '#/definitions/models.JwtPayload'
            type: array
      summary: User registration
      tags:
      - User
swagger: "2.0"
